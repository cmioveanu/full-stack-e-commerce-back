{"version":3,"sources":["features/Cart/Cart.module.css","features/Header/Header.module.css","features/Account/Orders.module.css","features/Account/Account.module.css","features/Products/Products.module.css","features/Products/IndividualProduct.module.css","features/Login/Register.module.css","features/Account/EditDetails.module.css","features/About/About.module.css","features/Banner/Banner.module.css","features/Footer/Footer.module.css","features/Login/Login.module.css","features/Contact/Contact.module.css","features/Login/LoginSlice.js","features/Cart/CartSlice.js","_images/images.js","_images/img1.jpg","_images/img2.jpg","_images/img3.jpg","_images/img4.jpg","_images/white1.jpg","_images/white2.jpg","_images/white3.jpg","_images/white4.jpg","_images/banner.jpg","features/Cart/Cart.js","features/Header/Header.js","features/Banner/Banner.js","features/Products/ProductsSlice.js","features/Products/IndividualProduct.js","features/Products/Products.js","features/Footer/Footer.js","features/Login/Login.js","features/Login/Register.js","utils/helpers.js","features/Account/Orders.js","features/Account/EditDetails.js","features/Account/Account.js","features/About/About.js","features/Contact/Contact.js","App.js","app/store.js","index.js"],"names":["module","exports","LoginSlice","createSlice","name","initialState","loggedIn","reducers","logIn","state","logOut","actions","CartSlice","productsInCart","numberOfItems","totalCost","addToCart","action","productsList","product","payload","productIndex","findIndex","element","id","quantity","parseFloat","unit_price","removeFromCart","existingProduct","filteredProductsList","filter","removeAllFromCart","images","img1","img2","img3","img4","white1","white2","white3","white4","banner","stripePromise","loadStripe","Cart","props","dispatch","useDispatch","useSelector","cart","open","products","individualProductOpen","useEffect","document","body","style","overflow","marginRight","handleStripeCheckout","a","map","price_data","currency","product_data","unit_amount","Math","round","productIds","stripe","fetch","method","headers","JSON","stringify","response","json","jsonResponse","redirectToCheckout","sessionId","console","error","className","styles","innerContainer","onClick","toggleCart","productsContainer","src","alt","productInfo","productName","productQuantity","decrement","increment","removeButton","checkoutSection","toFixed","checkoutButton","Header","login","useState","menuOpen","setMenuOpen","showCart","setShowCart","handleLogoutClick","err","closeMenu","mainNav","logo","to","cartAndMobileMenu","viewBox","width","height","data-testid","y","mobileNav","mobileNavInner","linksContainer","Banner","bannerContainer","ProductsSlice","toggleOpen","IndividualProduct","details","setDetails","type","jsonDetails","getProducts","container","goBack","toggle","description","sunglasses_colour","polarised","protection","anti_glare","anti_reflective","frame_material","lens_material","lens_height","lens_width","frame_width","leg_length","watches_colour","movement","stopwatch","waterproof","date","dial_diameter","dial_material","band_material","band_width","band_links","clasp_type","Products","setProducts","showIndividual","setShowIndividual","individualProduct","setIndividualProduct","jsonproductsList","toggleIndividual","currentProduct","Footer","footer","Login","username","setUsername","password","setPassword","history","useHistory","handleSubmit","event","preventDefault","status","push","onSubmit","htmlFor","required","onChange","e","target","value","Register","passwordConfirm","setPasswordConfirm","firstName","setFirstName","lastName","setLastName","phone","setPhone","alert","setAlert","result","register","dateConverter","routineDate","year","slice","day","month","charAt","Orders","orders","setOrders","jsonOrders","ordersList","ordersHistory","order","individualOrder","orderDetails","orderId","order_id","created_at","totalOrderAmount","productDetails","product_id","EditDetails","newEmail","setNewEmail","emailConfirm","setEmailConfirm","oldPassword","setOldPassword","newPassword","setNewPassword","alertMessage","setAlertMessage","handleEmailSubmit","handlePasswordSubmit","editDetailsContainer","Account","seeOrders","setSeeOrders","seeEmail","setSeeEmail","seePassword","setSeePassword","message","setMessage","query","URLSearchParams","window","location","search","get","checkParams","account","overview","editPara","About","about","firstHeader","Contact","setName","email","setEmail","contact","rows","App","then","res","exact","path","eaxt","configureStore","reducer","loginReducer","cartReducer","productsReducer","ReactDOM","render","StrictMode","store","getElementById"],"mappings":"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","file":"static/js/main.8a33a326.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"cart\":\"Cart_cart__H9gdr\",\"outerContainer\":\"Cart_outerContainer__29PHh\",\"innerContainer\":\"Cart_innerContainer__3ObQI\",\"productsContainer\":\"Cart_productsContainer__Mwx7K\",\"decrement\":\"Cart_decrement__MI9HL\",\"increment\":\"Cart_increment__1RtzL\",\"removeButton\":\"Cart_removeButton__e0CmX\",\"product\":\"Cart_product__1-Epm\",\"productName\":\"Cart_productName__QMUvL\",\"productInfo\":\"Cart_productInfo__3Nze3\",\"productQuantity\":\"Cart_productQuantity__1lTf4\",\"checkoutSection\":\"Cart_checkoutSection__3uMpo\",\"checkoutButton\":\"Cart_checkoutButton__3hGOH\",\"productsInCart\":\"Cart_productsInCart__2k3o2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainNav\":\"Header_mainNav__1l5y7\",\"logo\":\"Header_logo__30C5C\",\"cart\":\"Header_cart__1pRyT\",\"mobileNav\":\"Header_mobileNav__39lmy\",\"mobileNavInner\":\"Header_mobileNavInner__3DSp-\",\"linksContainer\":\"Header_linksContainer__Lwc6x\",\"cartAndMobileMenu\":\"Header_cartAndMobileMenu__21gwe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ordersHistory\":\"Orders_ordersHistory__2oU5y\",\"individualOrder\":\"Orders_individualOrder__bg0MN\",\"orderDetails\":\"Orders_orderDetails__4kc13\",\"orderId\":\"Orders_orderId__20hx3\",\"productDetails\":\"Orders_productDetails__2_w1c\",\"productName\":\"Orders_productName__DRhzy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"account\":\"Account_account__20if9\",\"overview\":\"Account_overview__1Ik4H\",\"editPara\":\"Account_editPara__3vqh7\",\"message\":\"Account_message__3rJv8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"productsContainer\":\"Products_productsContainer__2OV6u\",\"products\":\"Products_products__2zG_O\",\"individualProduct\":\"Products_individualProduct__3qzXX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"IndividualProduct_container__MkCsC\",\"innerContainer\":\"IndividualProduct_innerContainer__2WZtS\",\"goBack\":\"IndividualProduct_goBack__2__mJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"register\":\"Register_register__2n_jO\",\"alert\":\"Register_alert__3LCNn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"editDetailsContainer\":\"EditDetails_editDetailsContainer__3ZD4Q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"about\":\"About_about__1aMJC\",\"firstHeader\":\"About_firstHeader__141qV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bannerContainer\":\"Banner_bannerContainer__3rw6_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__3ONt-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"Login_login__2D6r-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact\":\"Contact_contact__3Wj0T\"};","import { createSlice } from '@reduxjs/toolkit';\n\nexport const LoginSlice = createSlice({\n    name: \"login\",\n    initialState: {\n        loggedIn: false\n    },\n    reducers: {\n        logIn: (state) => {\n            state.loggedIn = true;\n        },\n        logOut: (state) => {\n            state.loggedIn = false;\n        }\n    }\n});\n\nexport const { logIn, logOut } = LoginSlice.actions;\nexport default LoginSlice.reducer;","import { createSlice } from '@reduxjs/toolkit';\n\n\nexport const CartSlice = createSlice({\n    name: 'cart',\n    initialState: {\n        productsInCart: [],\n        numberOfItems: 0,\n        totalCost: 0,\n    },\n    reducers: {\n        addToCart: (state, action) => {\n            //copy the products list and the product to be added\n            const productsList = [...state.productsInCart];\n            const product = { ...action.payload };\n\n            //get the index of the product to check if it already exists in cart\n            const productIndex = productsList.findIndex(element => element.id === product.id);\n\n            //if it doesn't exist, initialize quantity and add it to cart\n            if (productIndex === -1) {\n                product.quantity = 1;\n                state.productsInCart = [...productsList, product];\n            }\n            //if it does exist, increment it's quantity property without adding duplicates\n            else {\n                const existingProduct = productsList[productIndex];\n                existingProduct.quantity++;\n\n                state.productsInCart = productsList;\n            }\n\n            //increment the number of items and add cost to total cost\n            state.numberOfItems++;\n            state.totalCost += parseFloat(action.payload.unit_price);\n        },\n\n\n        removeFromCart: (state, action) => {\n            //copy the products list and the product to be removed\n            const productsList = [...state.productsInCart];\n            const product = { ...action.payload };\n\n            //get the index of the product in cart\n            const productIndex = productsList.findIndex(element => element.id === product.id);\n            const existingProduct = productsList[productIndex];\n\n            //if quantity is 1, remove the product\n            if(existingProduct.quantity === 1) {\n                const filteredProductsList = productsList.filter(element => element.id !== product.id);\n                state.productsInCart = filteredProductsList;\n            } \n            //if quantity is higher than 1, decrement quantity\n            else {\n                existingProduct.quantity--;\n                state.productsInCart = productsList;\n            }\n\n            //decrement number of items and remove the cost from total cost\n            state.numberOfItems--;\n\n            let totalCost = state.totalCost -= parseFloat(action.payload.unit_price);\n            if(totalCost < 0) totalCost = 0;\n            state.totalCost = totalCost;\n        },\n\n\n        removeAllFromCart: (state, action) => {\n            //copy the products list and the product to be removed\n            const productsList = [...state.productsInCart];\n            const product = { ...action.payload };\n\n            //get the index of the product in cart\n            const productIndex = productsList.findIndex(element => element.id === product.id);\n            const existingProduct = productsList[productIndex];\n\n            //decrease number of items and remove the cost from total cost\n            state.numberOfItems -= existingProduct.quantity;\n\n            let totalCost = state.totalCost - parseFloat(existingProduct.quantity * existingProduct.unit_price);\n            if(totalCost < 0) totalCost = 0;\n            state.totalCost = totalCost;\n\n            //remove the item from the list\n            state.productsInCart = state.productsInCart.filter(product => product.id !== action.payload.id);\n        },\n    }\n});\n\n\nexport const { addToCart, removeFromCart, removeAllFromCart } = CartSlice.actions;\nexport default CartSlice.reducer;","import img1 from './img1.jpg';\nimport img2 from './img2.jpg'; \nimport img3 from './img3.jpg'; \nimport img4 from './img4.jpg'; \nimport white1 from './white1.jpg'; \nimport white2 from './white2.jpg'; \nimport white3 from './white3.jpg'; \nimport white4 from './white4.jpg';\nimport banner from './banner.jpg';\n\nexport const images = {\n    img1: img1,\n    img2: img2,\n    img3: img3,\n    img4: img4,\n    white1: white1,\n    white2: white2,\n    white3: white3,\n    white4: white4,\n    banner: banner\n}","export default __webpack_public_path__ + \"static/media/img1.663e08fc.jpg\";","export default __webpack_public_path__ + \"static/media/img2.6b706196.jpg\";","export default __webpack_public_path__ + \"static/media/img3.eff75815.jpg\";","export default __webpack_public_path__ + \"static/media/img4.3818a2e9.jpg\";","export default __webpack_public_path__ + \"static/media/white1.41d9ce02.jpg\";","export default __webpack_public_path__ + \"static/media/white2.e13a6ccb.jpg\";","export default __webpack_public_path__ + \"static/media/white3.6e922922.jpg\";","export default __webpack_public_path__ + \"static/media/white4.e30594ff.jpg\";","export default __webpack_public_path__ + \"static/media/banner.0ef29921.jpg\";","import styles from './Cart.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { addToCart, removeFromCart, removeAllFromCart } from '../Cart/CartSlice';\nimport { useEffect } from 'react';\n\nimport { images } from '../../_images/images';\n\nimport { loadStripe } from '@stripe/stripe-js';\nconst stripePromise = loadStripe('pk_test_51IiLWaFmwWJ3Dyfc6Tg7PKSoEcaNMTO62LGjrNBCh3YJ34LGDqdaytDx8gCOwe3Czk8HdCMy7MKtCWsl5k54cnwc00CtddBNIs');\n\n\nexport const Cart = (props) => {\n    const dispatch = useDispatch();\n\n    const productsInCart = useSelector(state => state.cart.productsInCart);\n    const numberOfItems = useSelector(state => state.cart.numberOfItems);\n    const totalCost = useSelector(state => state.cart.totalCost);\n    const open = useSelector(state => state.products.individualProductOpen);\n\n\n    //disable background scroll if cart open and individual product modal is not open\n    useEffect(() => {\n        if (!open) {\n            document.body.style.overflow = 'hidden';\n            document.body.style.marginRight = '14px';\n\n            return () => {\n                document.body.style.overflow = 'unset';\n                document.body.style.marginRight = 'unset';\n            }\n        }\n    });\n\n\n    //Stripe checkout\n    const handleStripeCheckout = async () => {\n\n        //map the products to the Stripe format\n        const products = productsInCart.map(product => {\n            return {\n                price_data: {\n                    currency: 'gbp',\n                    product_data: {\n                        name: product.name\n                    },\n                    unit_amount: Math.round(product.unit_price * 100)\n                },\n                quantity: product.quantity\n            }\n        });\n\n        //map the product ids and quantities for inserting into database\n        const productIds = productsInCart.map(product => {\n            return {\n                id: product.id,\n                quantity: product.quantity\n            }\n        })\n\n        //create Stripe checkout session and redirect to Stripe\n        try {\n            const stripe = await stripePromise;\n\n            const response = await fetch('api/checkout/', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    products: products,\n                    productIds: productIds\n                })\n            });\n\n            const jsonResponse = await response.json();\n\n            await stripe.redirectToCheckout({\n                sessionId: jsonResponse.id\n            });\n        }\n        catch (err) {\n            console.error(err);\n        }\n    };\n\n\n    return (\n        <section className={styles.cart}>\n            <div className={styles.innerContainer}>\n\n                {/* items in cart count at the top*/}\n                <div className={styles.productsInCart}>\n                    <p>{numberOfItems} item(s) in your cart</p>\n                    <button onClick={props.toggleCart}>X</button>\n                </div>\n\n                {/* products in cart */}\n                <div className={styles.productsContainer}>\n                    {\n                        productsInCart.map(product => (\n                            <div key={product.id} className={styles.product}>\n                                <div><img src={images[`white${product.id}`]} alt={product.name}></img></div>\n\n                                <div className={styles.productInfo}>\n                                    <p className={styles.productName}>{product.name} <br /></p>\n                                    <p className={styles.productQuantity}>{product.quantity} x £{product.unit_price}</p>\n\n                                    <button\n                                        className={styles.decrement}\n                                        onClick={() => dispatch(removeFromCart(product))}\n                                    >-</button>\n                                    {product.quantity}\n                                    <button\n                                        className={styles.increment}\n                                        onClick={() => dispatch(addToCart(product))}\n                                    >+</button>\n\n                                    <button onClick={() => dispatch(removeAllFromCart(product))}\n                                        className={styles.removeButton}>REMOVE</button>\n                                </div>\n                            </div>\n                        ))\n                    }\n                </div>\n\n                {/* subtotal and checkout */}\n                <div className={styles.checkoutSection}>\n                    <p>SUBTOTAL: £{totalCost.toFixed(2)}</p>\n                    <button\n                        className={styles.checkoutButton}\n                        onClick={handleStripeCheckout}\n                    >Checkout</button>\n                </div>\n            </div>\n        </section>\n    );\n}","import styles from './Header.module.css';\nimport { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Link } from \"react-router-dom\";\n\nimport { logOut } from '../Login/LoginSlice';\nimport { Cart } from '../Cart/Cart';\n\n\nexport const Header = () => {\n    const loggedIn = useSelector(state => state.login.loggedIn);\n    const numberOfItems = useSelector(state => state.cart.numberOfItems);\n    const dispatch = useDispatch();\n\n    const [menuOpen, setMenuOpen] = useState(false);\n    const [showCart, setShowCart] = useState(false);\n\n\n    //log out and redirect to login page\n    const handleLogoutClick = () => {\n        try {\n            fetch('api/account/logout');\n            dispatch(logOut());\n\n        }\n        catch (err) {\n            console.error('Unable to log out', err);\n        }\n\n        setMenuOpen(false);\n    }\n\n\n    //close mobile menu\n    const closeMenu = () => {\n        setMenuOpen(false);\n    }\n\n\n    //toggle cart\n    const toggleCart = () => {\n        showCart ? setShowCart(false) : setShowCart(true);\n    }\n\n\n    return (\n        <header>\n            {/* Desktop menu */}\n            <nav className={styles.mainNav}>\n                <div>\n                    <h1 className={styles.logo}>\n                        <Link to=\"/\">The Wooden Shop</Link>\n                    </h1>\n                    <ul >\n                        <li><Link to=\"/products\">Products</Link></li>\n                        <li><Link to=\"/about\" >About</Link></li>\n                        <li><Link to=\"/contact\">Contact</Link></li>\n                    </ul>\n                </div>\n\n                <ul>\n                    {\n                        !loggedIn ? <li><Link to=\"/login\">Login</Link></li> :\n                            <li><Link to=\"/login\" onClick={handleLogoutClick}>Log out</Link></li>\n                    }\n\n                    {\n                        !loggedIn ? null :\n                            <li><Link to=\"/account\">Account</Link></li>\n                    }\n\n                    <li onClick={toggleCart}><span className={styles.cart}>Cart: {numberOfItems}</span></li>\n                </ul>\n\n                {/* Hamburger menu icon and cart button */}\n                <ul className={styles.cartAndMobileMenu}>\n                    <li onClick={toggleCart}><span className={styles.cart}>Cart: {numberOfItems}</span></li>\n                    <li>\n                        <svg\n                            viewBox=\"0 0 100 80\"\n                            width=\"40\"\n                            height=\"40\"\n                            data-testid=\"openMenuButton\"\n                            onClick={() => setMenuOpen(true)}\n                        >\n                            <rect width=\"100\" height=\"10\"></rect>\n                            <rect y=\"30\" width=\"100\" height=\"10\"></rect>\n                            <rect y=\"60\" width=\"100\" height=\"10\"></rect>\n                        </svg>\n                    </li>\n                </ul>\n            </nav>\n\n            {/* Mobile nav, only displayed for smaller devices */}\n            {!menuOpen ? null :\n                <nav className={styles.mobileNav}>\n                    <div className={styles.mobileNavInner}>\n                        <button onClick={() => setMenuOpen(false)}>X</button>\n\n                        <div className={styles.linksContainer}>\n                            <ul>\n                                <li><Link to=\"/products\" onClick={closeMenu}>Products</Link></li>\n                                <li><Link to=\"/about\" onClick={closeMenu}>About</Link></li>\n                                <li><Link to=\"/contact\" onClick={closeMenu}>Contact</Link></li>\n                                {\n                                    !loggedIn ? <li><Link to=\"/login\" onClick={closeMenu}>Login</Link></li> :\n                                        <li><Link to=\"/login\" onClick={handleLogoutClick}>Log out</Link></li>\n                                }\n                                {\n                                    !loggedIn ? null :\n                                        <li><Link to=\"/account\" onClick={closeMenu}>Account</Link></li>\n                                }\n                            </ul>\n                        </div>\n                    </div>\n                </nav>\n            }\n\n            {/* Cart Component */}\n            {showCart ? <Cart toggleCart={toggleCart} /> : null}\n        </header>\n    );\n};","import styles from './Banner.module.css';\nimport { images } from '../../_images/images';\nimport { Link } from \"react-router-dom\";\n\n\nexport const Banner = () => {\n\n    return (\n        <main className={styles.bannerContainer}>\n            <img src={images.banner} alt=\"Sunglasses on dark background\"></img>\n            <hgroup>\n                <h2>Stylish. Elegant. Unique.</h2>\n                <h3>Beautiful eco-friendly accesories</h3>\n                <h4><button><Link to=\"/products\">See our products</Link></button></h4>\n            </hgroup>\n        </main>\n    );\n};","import { createSlice } from '@reduxjs/toolkit';\n\nexport const ProductsSlice = createSlice({\n    name: \"products\",\n    initialState: {\n        individualProductOpen: false\n    },\n    reducers: {\n        toggleOpen: (state) => {\n            const open = state.individualProductOpen;\n            state.individualProductOpen = open ? false : true;\n        },\n    }\n});\n\nexport const { toggleOpen } = ProductsSlice.actions;\nexport default ProductsSlice.reducer;","import styles from './IndividualProduct.module.css';\nimport { images } from '../../_images/images';\n\nimport { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { toggleOpen } from './ProductsSlice';\nimport { addToCart } from '../Cart/CartSlice';\n\n\nexport const IndividualProduct = (props) => {\n    const [details, setDetails] = useState({});\n    const dispatch = useDispatch();\n    const product = props.product;\n\n\n    //get details for the product\n    useEffect(() => {\n        const getProducts = async () => {\n            const type = product.type === 'sunglasses' ? 'sunglasses' : 'watches';\n\n            try {\n                const details = await fetch('api/products/' + type + '/' + product.id);\n                const jsonDetails = await details.json();\n                setDetails(jsonDetails);\n            }\n            catch (err) {\n                console.error('Unable to get product details', err);\n            }\n        }\n\n        getProducts();\n    }, [product.id, product.type]);\n\n\n    //disable background scroll when modal is open and add margin\n    useEffect(() => {\n        document.body.style.overflow = 'hidden';\n        document.body.style.marginRight = '14px';\n\n        //remove styles and toggle back to false\n        return () => {\n            document.body.style.overflow = 'unset';\n            document.body.style.marginRight = 'unset';\n            dispatch(toggleOpen());\n        }\n    }, [dispatch]);\n\n\n    return (\n        <section className={styles.container}>\n            <div className={styles.innerContainer}>\n                <div>\n                    <img src={images[`white${product.id}`]} alt={product.name} />\n                </div>\n                <div>\n                    <button\n                        className={styles.goBack}\n                        onClick={props.toggle}\n                    >{\"<< go back\"}</button>\n                    <h2>{product.name}</h2>\n                    <p>{product.description}</p>\n\n                    <button onClick={() => dispatch(addToCart(product))}>Add to cart</button>\n\n                    <h3>Specifications:</h3>\n\n                    {\n                        //if sunglasses, render the first table, otherwise render the second table\n                        product.type === 'sunglasses' ?\n                            <table>\n                                <tbody>\n                                    <tr><td>colour:</td><td>{details.sunglasses_colour}</td></tr>\n                                    <tr><td>polarised:</td><td>{details.polarised ? 'yes' : 'no'}</td></tr>\n                                    <tr><td>UV protection:</td><td>{details.protection}</td></tr>\n                                    <tr><td>anti-glare:</td><td>{details.anti_glare ? 'yes' : 'no'}</td></tr>\n                                    <tr><td>anti-reflective:</td><td>{details.anti_reflective ? 'yes' : 'no'}</td></tr>\n                                    <tr><td>frame material:</td><td>{details.frame_material}</td></tr>\n                                    <tr><td>lens material:</td><td>{details.lens_material}</td></tr>\n                                    <tr><td>lens height:</td><td>{details.lens_height}</td></tr>\n                                    <tr><td>lens width:</td><td>{details.lens_width}</td></tr>\n                                    <tr><td>frame width:</td><td>{details.frame_width}</td></tr>\n                                    <tr><td>leg length:</td><td>{details.leg_length}</td></tr>\n                                </tbody>\n                            </table>\n                            :\n                            <table>\n                                <tbody>\n                                    <tr><td>colour:</td><td>{details.watches_colour}</td></tr>\n                                    <tr><td>movement:</td><td>{details.movement}</td></tr>\n                                    <tr><td>stopwatch:</td><td>{details.stopwatch ? 'yes' : 'no'}</td></tr>\n                                    <tr><td>waterproof:</td><td>{details.waterproof}</td></tr>\n                                    <tr><td>date:</td><td>{details.date ? 'yes' : 'no'}</td></tr>\n                                    <tr><td>dial diameter:</td><td>{details.dial_diameter}</td></tr>\n                                    <tr><td>dial material:</td><td>{details.dial_material}</td></tr>\n                                    <tr><td>band material:</td><td>{details.band_material}</td></tr>\n                                    <tr><td>band width:</td><td>{details.band_width}</td></tr>\n                                    <tr><td>band links:</td><td>{details.band_links}</td></tr>\n                                    <tr><td>clasp type:</td><td>{details.clasp_type}</td></tr>\n                                </tbody>\n                            </table>\n                    }\n\n\n                </div>\n            </div>\n        </section>\n    );\n}","import styles from './Products.module.css';\nimport { images } from '../../_images/images';\n\nimport { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { IndividualProduct } from './IndividualProduct';\nimport { toggleOpen } from './ProductsSlice';\n\nexport const Products = () => {\n    const [products, setProducts] = useState([]);\n    const [showIndividual, setShowIndividual] = useState(false);\n    const [individualProduct, setIndividualProduct] = useState(null);\n    const dispatch = useDispatch();\n\n\n    //get the products list from the database\n    useEffect(() => {\n        const productsList = async () => {\n            try {\n                const productsList = await fetch('api/products');\n                const jsonproductsList = await productsList.json();\n                setProducts(jsonproductsList);\n            }\n            catch (err) {\n                console.error('Unable to get products list', err);\n            }\n        }\n\n        productsList();\n    }, [])\n\n\n    //toggle individual product modal and pass it the clicked product\n    const toggleIndividual = (currentProduct) => {\n        showIndividual ? setShowIndividual(false) : setShowIndividual(true);\n        if (currentProduct) {\n            setIndividualProduct(currentProduct);\n        }\n\n        dispatch(toggleOpen());\n    }\n\n\n    return (\n        <main className={styles.productsContainer}>\n            <h2>Our Products:</h2>\n            <div data-testid=\"product\" className={styles.products}>\n                {\n                    products.map(product => (\n                        <div className={styles.individualProduct} key={product.id}>\n                            <div onClick={() => toggleIndividual(product)}>\n                                <img\n                                    src={images[`img${product.id}`]}\n                                    alt={product.name}\n                                />\n                                <h3>{product.name}</h3>\n                            </div>\n                        </div>\n                    ))\n                }\n            </div>\n\n            {\n                showIndividual ? <IndividualProduct product={individualProduct} toggle={toggleIndividual} /> : null\n            }\n\n        </main >\n    );\n};","import React from 'react';\nimport styles from './Footer.module.css';\n\nexport const Footer = () => {\n    return (\n        <footer className={styles.footer}>\n            <p>Here at <span>The Wooden </span> we simply love wood for its traditional and stylish appearance,\n                so we try our best to offer you the highest quality watches and sunglasses.</p>\n            <small>&#169; 2021 - The Wooden Shop</small>\n        </footer>\n    );\n};","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport styles from './Login.module.css';\nimport { Link, Redirect, useHistory } from 'react-router-dom';\n\nimport { logIn } from './LoginSlice';\n\n\nexport const Login = () => {\n    const loggedIn = useSelector(state => state.login.loggedIn);\n\n    const [username, setUsername] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n\n    const dispatch = useDispatch();\n    const history = useHistory();\n\n    if (loggedIn) {\n        return <Redirect to=\"/account\" />;\n    }\n\n\n    //login and if successful, redirect to main page\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n\n        try {\n            const result = await fetch('api/account/login', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    username: username,\n                    password: password\n                })\n            });\n\n            if (result.status === 200) {\n                dispatch(logIn());\n                history.push('/');\n            }\n        }\n        catch (err) {\n            console.error('Unable to log in', err);\n        }\n\n    }\n\n\n    return (\n        <main className={styles.login}>\n            <form onSubmit={handleSubmit} action=\"\">\n                <label htmlFor=\"username\">Email:</label>\n                <input type=\"email\" name=\"username\" id=\"username\" required\n                    onChange={e => setUsername(e.target.value)} />\n                <label htmlFor=\"password\">Password:</label>\n                <input type=\"password\" name=\"password\" id=\"password\" required\n                    onChange={e => setPassword(e.target.value)} />\n                <button type=\"submit\">Log In</button>\n                <p>Don't have an account? <Link to=\"/register\">Register here.</Link></p>\n            </form>\n        </main >\n    );\n}","import styles from './Register.module.css';\nimport { Link } from 'react-router-dom';\nimport { useState } from 'react';\n\n\nexport const Register = () => {\n    const [username, setUsername] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [passwordConfirm, setPasswordConfirm] = useState(\"\");\n    const [firstName, setFirstName] = useState(\"\");\n    const [lastName, setLastName] = useState(\"\");\n    const [phone, setPhone] = useState(\"\");\n\n    const [alert, setAlert] = useState(\"\");\n\n\n    //login and if successful, redirect to workout page\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n\n        if (password === passwordConfirm) {\n            try {\n                const result = await fetch('api/account/register', {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type': 'application/json'\n                    },\n                    body: JSON.stringify({\n                        username: username,\n                        password: password,\n                        firstName: firstName,\n                        lastName: lastName,\n                        phone: phone\n                    })\n                });\n\n                if (result.status === 403) {\n                    setAlert(\"Email already exists. Please log in.\");\n                } else if (result.status === 201) {\n                    setAlert(\"User created, you can log in now.\");\n                }\n            }\n            catch (err) {\n                console.error('Unable to register new account', err);\n            }\n\n        } else {\n            setAlert(\"Password fields don't match. Try again.\");\n        }\n    }\n    \n\n    return (\n        <main className={styles.register}>\n            <form onSubmit={handleSubmit} action=\"\">\n                <div>\n                    <label htmlFor=\"username\">Email:</label>\n                    <input id=\"username\" type=\"email\" required\n                        onChange={e => setUsername(e.target.value)} />\n                    <label htmlFor=\"password\">Password:</label>\n                    <input id=\"password\" type=\"password\" required\n                        onChange={e => setPassword(e.target.value)} />\n                    <label htmlFor=\"passwordConfirm\">Confirm Password:</label>\n                    <input id=\"passwordConfirm\" type=\"password\" required\n                        onChange={e => setPasswordConfirm(e.target.value)} />\n                </div>\n                <div>\n                    <label htmlFor=\"firstName\">First Name:</label>\n                    <input id=\"firstName\" type=\"text\" required\n                        onChange={e => setFirstName(e.target.value)} />\n                    <label htmlFor=\"lastName\">Last Name:</label>\n                    <input id=\"lastName\" type=\"text\" required\n                        onChange={e => setLastName(e.target.value)} />\n                    <label htmlFor=\"phoneNumber\">Phone Number:</label>\n                    <input id=\"phoneNumber\" type=\"tel\" required\n                        onChange={e => setPhone(e.target.value)} />\n                    <button type=\"submit\">Register</button>\n                    <p className={styles.alert}>{alert}</p>\n                    <p>Already have an account? <Link to=\"/login\">Log in here.</Link></p>\n                </div>\n            </form>\n\n        </main >\n    );\n}","//convert date from database string to a better display format\nexport const dateConverter = (routineDate) => {\n    const monthsArray = [null, \"January\", \"February\", \"March\", \"April\",\n        \"May\", \"June\", \"July\", \"August\", \"September\", \"November\", \"December\"];\n\n    const year = routineDate.slice(0, 4);\n    const day = routineDate.slice(8, 10);\n\n    let month = routineDate.slice(5, 7);\n    if (month.charAt(0) === \"0\") month = month.charAt(1);\n    month = monthsArray[month];\n\n    return `${day} ${month} ${year}`;\n}","import styles from './Orders.module.css';\nimport { useState, useEffect } from 'react';\n\nimport { images } from '../../_images/images';\nimport { dateConverter } from '../../utils/helpers';\n\n\nexport const Orders = () => {\n    const [orders, setOrders] = useState([]);\n\n\n    //get the list of previous orders\n    useEffect(() => {\n        const ordersList = async () => {\n            try {\n                const orders = await fetch('api/orders');\n                const jsonOrders = await orders.json();\n                setOrders(jsonOrders);\n            }\n            catch (err) {\n                console.error('Unable to fetch orders', err);\n            }\n        }\n\n        ordersList();\n    }, [])\n\n\n    return (\n        <section className={styles.ordersHistory}>\n            {\n                /* Map the list of orders for display */\n                orders.map(order => (\n                    <div key={order[0].order_id + order[0].product_id} className={styles.individualOrder}>\n\n                        <div className={styles.orderDetails}>\n                            <p className={styles.orderId}># {order[0].order_id} - {order[0].status}</p>\n                            <p>{dateConverter((order[0].created_at))}</p>\n                            <p>Total: £{order[0].totalOrderAmount}</p>\n                        </div>\n\n                        {\n                            /* Map the products inside the order */\n                            order.map(product => (\n                                <div key={product.product_id + 'product'} className={styles.productDetails} >\n                                    <img src={images[`img${product.product_id}`]} alt={product.name} />\n                                    <div>\n                                        <p className={styles.productName}>{product.name}</p>\n                                        <p>{product.quantity} x £{product.unit_price}</p>\n                                    </div>\n                                </div>\n                            ))\n                        }\n                    </div>\n                ))\n            }\n        </section>\n    );\n};","import { useState } from 'react';\nimport styles from './EditDetails.module.css';\n\n\nexport const EditDetails = (props) => {\n    const [newEmail, setNewEmail] = useState(\"\");\n    const [emailConfirm, setEmailConfirm] = useState(\"\");\n\n    const [oldPassword, setOldPassword] = useState(\"\");\n    const [newPassword, setNewPassword] = useState(\"\");\n    const [passwordConfirm, setPasswordConfirm] = useState(\"\");\n\n    const [alertMessage, setAlertMessage] = useState(\"\");\n\n\n    //change email\n    const handleEmailSubmit = async (event) => {\n        event.preventDefault();\n\n        if (newEmail === emailConfirm) {\n            try {\n                const result = await fetch('api/account/email', {\n                    method: 'PUT',\n                    headers: {\n                        'content-type': 'application/json',\n                    },\n                    body: JSON.stringify({\n                        password: oldPassword,\n                        newEmail: newEmail\n                    })\n                });\n\n                if (result.status === 200) {\n                    setAlertMessage('Email changed.');\n                }\n                else if (result.status === 403) {\n                    setAlertMessage('Unable to change email. Please try again!');\n                }\n            }\n            catch (err) {\n                console.error('Unable to change email', err);\n            }\n        }\n        else {\n            setAlertMessage(\"Emails don't match. Try again!\");\n        }\n    }\n\n\n    //change password\n    const handlePasswordSubmit = async (event) => {\n        event.preventDefault();\n\n        if (newPassword === passwordConfirm) {\n            try {\n                const result = await fetch('api/account/password', {\n                    method: 'PUT',\n                    headers: {\n                        'content-type': 'application/json'\n                    },\n                    body: JSON.stringify({\n                        oldPassword: oldPassword,\n                        newPassword: newPassword\n                    })\n                });\n\n                if (result.status === 200) {\n                    setAlertMessage('Password changed.');\n                }\n                else if (result.status === 403) {\n                    setAlertMessage('Unable to change password. Please try again!');\n                }\n            }\n            catch (err) {\n                console.error('Unable to change password', err);\n            }\n        }\n        else {\n            setAlertMessage(\"Passwords don't match. Try again!\");\n        }\n    }\n\n\n    return (\n        <section className={styles.editDetailsContainer}>\n\n            {/* If the type is email, render email form. Otherwise render password form */}\n            { props.type === 'email' ?\n                <form onSubmit={handleEmailSubmit} action=\"\">\n                    <label htmlFor=\"passwordConfirmEmail\">Enter your password:</label>\n                    <input id=\"passwordConfirmEmail\" type=\"password\" required\n                        onChange={e => setOldPassword(e.target.value)} />\n                    <label htmlFor=\"newEmail\">New email address:</label>\n                    <input id=\"newEmail\" type=\"email\" required\n                        onChange={e => setNewEmail(e.target.value)} />\n                    <label htmlFor=\"emailConfirm\">Confirm new email address:</label>\n                    <input id=\"emailConfirm\" type=\"email\" required\n                        onChange={e => setEmailConfirm(e.target.value)} />\n                    <button type=\"submit\">Change email address</button>\n                </form>\n                :\n                <form onSubmit={handlePasswordSubmit} action=\"\">\n                    <label htmlFor=\"oldPassword\">Enter old password:</label>\n                    <input id=\"oldPassword\" type=\"password\" required\n                        onChange={e => setOldPassword(e.target.value)} />\n                    <label htmlFor=\"newPassword\">New password:</label>\n                    <input id=\"newPassword\" type=\"password\" required\n                        onChange={e => setNewPassword(e.target.value)} />\n                    <label htmlFor=\"passwordConfirm\">Confirm new password:</label>\n                    <input id=\"passwordConfirm\" type=\"password\" required\n                        onChange={e => setPasswordConfirm(e.target.value)} />\n                    <button type=\"submit\">Change password</button>\n                </form>\n            }\n            <p className={styles.alert}>{alertMessage}</p>\n        </section >\n    );\n}","import styles from './Account.module.css';\nimport { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport { Orders } from './Orders';\nimport { EditDetails } from './EditDetails';\n\n\nexport const Account = () => {\n    const [seeOrders, setSeeOrders] = useState(false);\n    const [seeEmail, setSeeEmail] = useState(false);\n    const [seePassword, setSeePassword] = useState(false);\n    const [message, setMessage] = useState(null);\n\n    const loggedIn = useSelector(state => state.login.loggedIn);\n\n\n    //see orders\n    const openOrders = () => {\n        setSeeOrders(true);\n        setSeeEmail(false);\n        setSeePassword(false);\n    }\n\n\n    //see change email\n    const openChangeEmail = () => {\n        setSeeEmail(true);\n        setSeeOrders(false);\n        setSeePassword(false);\n    }\n\n\n    //see change password\n    const openChangePassword = () => {\n        setSeePassword(true);\n        setSeeOrders(false);\n        setSeeEmail(false);\n    }\n\n\n    //check for params after redirecting from Stripe checkout\n    useEffect(() => {\n        const query = new URLSearchParams(window.location.search);\n\n        const checkParams = async () => {\n            //if successful, update to paid and remove parameters\n            if (query.get('success')) {\n                setMessage('Order placed! You will receive an email confirmation.');\n\n                try {\n                    await fetch('api/orders/paid', {\n                        method: 'GET',\n                        headers: {\n                            'Content-Type': 'application/json'\n                        }\n                    });\n                }\n                catch (err) {\n                    console.error('Unable to update order status to paid', err);\n                }\n\n                window.location = '/account';\n            }\n\n            //if canceled, delete the order and remove parameters\n            if (query.get('canceled')) {\n                setMessage('Order canceled! -- continue to shop around and checkout when you\\'re ready.');\n\n                try {\n                    await fetch('api/orders/delete', {\n                        method: 'DELETE',\n                        headers: {\n                            'Content-Type': 'application/json'\n                        }\n                    });\n                }\n                catch (err) {\n                    console.error('Unable to delete the canceled order', err);\n                }\n\n                window.location = '/account';\n            };\n        }\n\n        checkParams();\n    }, []);\n\n\n    return (\n        <main className={styles.account}>\n            <section className={styles.overview}>\n                <h2>\n                    {loggedIn ? 'Welcome back!' : 'Please log in first!'}\n                </h2>\n                <p className={styles.editPara}>You can edit your account details or check out your order history below.</p>\n\n                {!message ? null : <p className={styles.message}>{message}</p>}\n\n                <button onClick={openOrders}>Order history</button>\n                <button onClick={openChangeEmail}>Change email</button>\n                <button onClick={openChangePassword}>Change password</button>\n            </section>\n\n            {  /* Orders */\n                seeOrders ? <Orders /> : null\n            }\n\n            {  /* Edit Email */\n                seeEmail ? <EditDetails type=\"email\" /> : null\n            }\n\n            {   /* Edit Password */\n                seePassword ? <EditDetails type=\"password\" /> : null\n            }\n\n        </main>\n    );\n}","import styles from './About.module.css';\n\n\nexport const About = () => {\n    return (\n        <main className={styles.about}>\n            <section>\n                <h2 className={styles.firstHeader}>Why choose The Wooden Shop?</h2>\n                <p>The Wooden Watch Shop offers eco-friendly wooden watches with stylish,\n                    modern, yet affordable designs. Unique timepieces that are hand crafted from natural wood.</p>\n                <p>We have a variety of natural woods such as bamboo, maple, red sandalwood, zebrawood and beech.</p>\n                <p>All watches are fitted with premium quality Japanese quartz movements and have scratchproof hardlex\n                    glass to cover the dial, which keep the watches looking in top condition. </p>\n                <p>We also pride ourselves on having the highest standard of customer service,\n                    giving you peace of mind that we value all our customers and will go the extra\n                    mile to make sure your shopping experience with us is a happy one!</p>\n            </section>\n\n            <section>\n                <h2>What about skin allergies?</h2>\n                <p>All watches are hypoallergenic and are made from 100% natural wood with stainless steel clasps.\n                    No toxic chemicals are used to treat the wood, in order to maintain our pledge to be as eco-friendly as possible.</p>\n                <p>However, there is also a small possibility that some people may have an allergic reaction to the wood or metal clasps.\n                    After wearing your watch for a few weeks, it is recommended that you check your skin for any discomfort, rash, or itch. </p>\n                <p>In the very rare case that you experience an allergic reaction, please stop wearing the watch immediately and ask for\n                    medical advice from your doctor. We cannot offer refunds on watches based on allergies.</p>\n                <p>Disclaimer: Wooden Watch Shop cannot guarantee against allergic reactions. We are not responsible for allergies,\n                    injuries, or medical expenses as a result of wearing the wooden watches.</p>\n            </section>\n            <section>\n                <h2>Will my watch fit?</h2>\n                <p>Yes, all Wooden Watch Shop watches are sized to wrist watch standards.\n                    You can reduce the band length by removing links (tools are provided in the package).</p>\n                <p>A number of watches also contain extra links to expand the band length if needed.</p>\n                <p>If you think you may need the watch to fit a larger than standard wrist, please contact us and we can arrange for extra links to be provided.</p>\n            </section>\n\n            <section>\n                <h2>Can I replace the battery?</h2>\n                <p>All watches are either quartz battery powered or automatic self winding. For battery operated watches, if you wish to\n                    replace the battery yourself there is easy access to the battery by removing the backplate.</p>\n                <p>Alternatively most jewelry or watch shops will provide a battery replacement service.</p>\n                <p>Batteries should last a number of years before needing to be changed, but this will vary from watch to watch.\n                    (Please note batteries are not included in the warranty)</p>\n            </section>\n\n            <section>\n                <h2> How do I care for the watch?</h2>\n                <p>Mix two tsps each of olive oil and lemon juice, and apply to a soft cotton cloth. Apply to the wood.</p>\n                <p> If at any time your watch looks lighter or starts to change in appearance, we recommend that you apply\n                    a natural coating such as beeswax, lip balm, butcher block oil or walnut oil. </p>\n                <p>Regular application can help to protect it against damage and improve the durability of the wood\n                    and help maintain the moisture balance to prevent drying or cracking.</p>\n            </section>\n        </main >\n    );\n};","import styles from './Contact.module.css';\nimport { useState } from 'react';\n\n\nexport const Contact = () => {\n    const [name, setName] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [message, setMessage] = useState(\"\");\n    const [alert, setAlert] = useState(\"\");\n\n\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n\n        try {\n            const sentEmail = await fetch('api/contact', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    name: name,\n                    email: email,\n                    message: message\n                })\n            });\n\n\n            if (sentEmail.status === 200) {\n                setAlert(\"Message sent. Thank you!\");\n            } else {\n                setAlert(\"Message was not sent, try again.\");\n            }\n        }\n        catch (err) {\n            console.error('Unable to send email message', err);\n        }\n    }\n\n\n    return (\n        <main className={styles.contact}>\n            <h2>Contact Us</h2>\n            <p>Send us a message and we'll get back to you within 24h.</p>\n\n            <form onSubmit={handleSubmit} method=\"POST\">\n                <label htmlFor=\"name\">Name:</label>\n                <input\n                    type=\"text\"\n                    id=\"name\"\n                    value={name}\n                    onChange={e => setName(e.target.value)}\n                    required\n                />\n\n                <label htmlFor=\"email\">Email:</label>\n                <input\n                    type=\"email\"\n                    id=\"email\"\n                    value={email}\n                    onChange={e => setEmail(e.target.value)}\n                    required\n                />\n\n                <label htmlFor=\"message\">Message:</label>\n                <textarea\n                    rows=\"5\"\n                    id=\"message\"\n                    value={message}\n                    onChange={e => setMessage(e.target.value)}\n                    required>\n                </textarea>\n\n                <button type=\"submit\">Send</button>\n                <p>{alert}</p>\n            </form>\n        </main>\n    );\n}","import './App.css';\nimport { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\n//Import components\nimport { Header } from './features/Header/Header';\nimport { Banner } from './features/Banner/Banner';\nimport { Products } from './features/Products/Products';\nimport { Footer } from './features/Footer/Footer';\nimport { Login } from './features/Login/Login';\nimport { Register } from './features/Login/Register';\nimport { Account } from './features/Account/Account';\nimport { About } from './features/About/About';\nimport { Contact } from './features/Contact/Contact';\n\n//Import action creators\nimport { logIn } from './features/Login/LoginSlice';\n\n\nconst App = () => {\n  const dispatch = useDispatch();\n\n  //if user is logged in on the server, set the state as logged in\n  useEffect(() => {\n    fetch('api/account/checkLoginStatus').then(res => {\n      if (res.status === 200 || res.status === 304) {\n        dispatch(logIn());\n      }\n    });\n  }, [dispatch]);\n\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <Header />\n\n        <Switch>\n          <Route exact path=\"/\">\n              <Banner />\n          </Route>\n\n          <Route exact path=\"/products\">\n            <Products />\n          </Route>\n\n          <Route exact path=\"/about\">\n            <About />\n          </Route>\n\n          <Route eaxt path=\"/contact\">\n            <Contact />\n          </Route>\n\n          <Route exact path=\"/login\">\n            <Login />\n          </Route>\n\n          <Route exact path=\"/register\">\n            <Register />\n          </Route>\n\n          <Route path=\"/account\">\n            <Account />\n          </Route>\n        </Switch>\n\n        <Footer />\n      </div>\n    </Router >\n  );\n}\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\r\n\r\nimport loginReducer from '../features/Login/LoginSlice';\r\nimport cartReducer from '../features/Cart/CartSlice';\r\nimport productsReducer from '../features/Products/ProductsSlice';\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    login: loginReducer,\r\n    cart: cartReducer,\r\n    products: productsReducer\r\n  },\r\n});\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './app/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}